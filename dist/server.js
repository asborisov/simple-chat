function sendMessage(e){e.type="message",e=JSON.stringify(e),ws.clients.forEach(function(s){s.username&&s.send(e)})}function sendUserList(){var e=JSON.stringify({type:"usersList",list:usersOnline});ws.clients.forEach(function(s){s.username&&s.send(e)}),console.log("sendUserList:"+e)}function loginUser(e,s,n){var t;return users[e]?users[e].isOnline?t={status:2,message:"User already online"}:users[e].guid===s?(users[e].isOnline=!0,usersOnline.push(e),n.sendAfterLogout(users[e].logoutTime),t={status:0,guid:users[e].guid}):t={status:1,message:"Wrong GUID for user"}:(users[e]={logoutTime:null,isOnline:!0,guid:uuid.v1()},usersOnline.push(e),t={status:0,guid:users[e].guid}),t}function logoutUser(e){e&&(users[e].logoutTime=Date.now(),users[e].isOnline=!1,usersOnline.splice(usersOnline.indexOf(e),1),sendMessage({text:"User "+e+" disconnected"}))}function log(e,s){"string"!=typeof e&&(e=JSON.stringify(e)),s?console.log(s,e):console.log(e)}var WebSocket=require("ws"),uuid=require("node-uuid"),ws=new WebSocket.Server({port:3e3}),users={},usersOnline=[],messages=[];ws.on("connection",function(e){e.username=void 0,e.on("message",function(s){try{var n=JSON.parse(s);switch(n.type){case"login":var t,r=loginUser(n.username,n.guid,e);0==r.status?(e.username=n.username,sendMessage({text:"User "+e.username+" connected"}),log(n),t={status:"ok",username:n.username,guid:r.guid},sendUserList()):t={status:"error",code:r.status,message:r.message},t.type="login",e.send(JSON.stringify(t));break;case"message":delete n.type,n.sender=e.username,n.timestamp=Date.now(),messages.push(n),log(n),sendMessage(n)}}catch(u){console.log(u)}}),e.on("close",function(){logoutUser(e.username),sendUserList()}),e.sendAfterLogout=function(s){messages.filter(function(e){return e.timestamp>s}).forEach(function(s){s.type="message",e.send(JSON.stringify(s))})}}),log("server started");